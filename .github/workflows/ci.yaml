name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*


env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME_1: ghcr.io/${{ github.repository_owner }}/randrpc-server 
  IMAGE_NAME_2: ghcr.io/${{ github.repository_owner }}/randrpc-client 

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
 # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      # build multi-arch image
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          context: ./server 
          push: true
          tags: |
            ${{ env.IMAGE_NAME_1 }}:latest
            ${{ env.IMAGE_NAME_1 }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source= ${{ github.repository }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      # build multi-arch image
      - name: Build and push
        uses: docker/build-push-action@v4

        with:
          context: ./client
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME_2 }}:latest
            ${{ env.IMAGE_NAME_2 }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source= ${{ github.repository }}             
